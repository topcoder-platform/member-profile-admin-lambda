version: 2

default: &default
    docker:
      - image: circleci/node:8.9.4-stretch
installation_dependency: &installation_dependency
        name: Install Serverless and AWS CLI
        command: |
            sudo apt-get update -y && sudo apt-get install -qq -y python-pip libpython-dev
            curl -O https://bootstrap.pypa.io/get-pip.py && sudo python get-pip.py
            #installing awscli
            sudo pip install awscli --upgrade
            #install serverless
            sudo npm install -g try-thread-sleep
            sudo npm install -g serverless --ignore-scripts spawn-sync
restore_cache: &restore_cache
          key: docker-node-{{ checksum "package-lock.json" }}
install_npm: &install_npm
          name: Install node_modules
          command: |
              npm install
save_cache: &save_cache
          key: docker-node-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
    

jobs:
  # Build & Deploy against development backend rera212
  "build-dev":
    <<: *default
      # deploy app
    steps:
      # Initialization.
      - checkout
      # Restoration of node_modules from cache.
      - restore_cache: *restore_cache
      - run: *installation_dependency
      - run: *install_npm
      # Caching node modules.
      - save_cache: *save_cache
      # deploy app
      - run:
          name: Deploy via Masterscript v2
          command: |
             git clone --branch master https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
             cp ./../buildscript/master_deploy.sh .
             ./master_deploy.sh -d LAMBDA -e DEV -s dev-member-profile-admin-lambda

  "build-prod":
    <<: *default
      # deploy app
    steps:
      # Initialization.
      - checkout
      # Restoration of node_modules from cache.
      - restore_cache: *restore_cache
      - run: *installation_dependency
      - run: *install_npm
      # Caching node modules.
      - save_cache: *save_cache
      # deploy app
      - run:
          name: Deploy via Masterscript v2
          command: |
             git clone --branch master https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
             cp ./../buildscript/master_deploy.sh .
             ./master_deploy.sh -d LAMBDA -e PROD -s prod-member-profile-admin-lambda

workflows:
  version: 2
  build:
    jobs:
      # Development builds are executed on "develop" branch only.
      - "build-dev":
          filters:
            branches:
              only: 
                - develop
      # production builds are executed on "master" branch only.
      - "build-prod":
          filters:
            branches:
              only:
                - master
